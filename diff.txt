diff --git a/package.json b/package.json
index 520d722..c767099 100644
--- a/package.json
+++ b/package.json
@@ -15,6 +15,7 @@
     "react-scripts": "5.0.0",
     "redux": "^4.1.2",
     "redux-logger": "^3.0.6",
+    "redux-persist": "^6.0.0",
     "reselect": "^4.1.5",
     "web-vitals": "^2.1.4"
   },
diff --git a/src/components/collection-item/collection-item.styles.scss b/src/components/collection-item/collection-item.styles.scss
index 5cb0c24..34abe9e 100644
--- a/src/components/collection-item/collection-item.styles.scss
+++ b/src/components/collection-item/collection-item.styles.scss
@@ -1,5 +1,5 @@
 .collection-item {
-    width: 22%;
+    width: 22vw;
     display: flex;
     flex-direction: column;
     height: 350px;
@@ -28,7 +28,7 @@
       }
       .custom-button{
         opacity: 0.85;
-        display: flex;
+        // display: flex;
       }
     }
 
diff --git a/src/components/directory/directory.component.jsx b/src/components/directory/directory.component.jsx
index b516a8f..f1718cb 100644
--- a/src/components/directory/directory.component.jsx
+++ b/src/components/directory/directory.component.jsx
@@ -2,63 +2,22 @@ import { render } from "@testing-library/react";
 import React from "react";
 import './directory.styles.scss';
 import MenuItem from '../menu-item/menu-item.component';
+import { connect } from "react-redux";
+import { createStructuredSelector } from "reselect";
+import { selectDirectorySections } from "../../redux/directory/directory.selectors";
 
-class Directory extends React.Component{
-
-    constructor()
-    {
-        super();
-        this.state = {
-            sections:[
-                {
-                  title: 'hats',
-                  imageUrl: 'https://i.ibb.co/cvpntL1/hats.png',
-                  id: 1,
-                  linkUrl: 'shop/hats'
-                },
-                {
-                  title: 'jackets',
-                  imageUrl: 'https://i.ibb.co/px2tCc3/jackets.png',
-                  id: 2,
-                  linkUrl: 'shop/jackets'
-                },
-                {
-                  title: 'sneakers',
-                  imageUrl: 'https://i.ibb.co/0jqHpnp/sneakers.png',
-                  id: 3,
-                  linkUrl: 'shop/sneakers'
-                },
-                {
-                  title: 'womens',
-                  imageUrl: 'https://i.ibb.co/GCCdy8t/womens.png',
-                  size: 'large',
-                  id: 4,
-                  linkUrl: 'shop/womens'
-                },
-                {
-                  title: 'mens',
-                  imageUrl: 'https://i.ibb.co/R70vBrQ/men.png',
-                  size: 'large',
-                  id: 5,
-                  linkUrl: 'shop/mens'
-                }
-              ]
-        }
-    }
-
-    render() {
-        return (
-            <div className="directory-menu">
-                {   this.state.sections.map(({id,...otherSectionProps})=>
+const Directory = ({sections}) =>
+            (<div className="directory-menu">
+                { sections.map(({id,...otherSectionProps})=>
                     (
                         <MenuItem key={id} {...otherSectionProps}/>
                     ))}
-            </div>
-        )
-    }
-}
-
+            </div>)
 
 
+const mapStateToProps = createStructuredSelector({
+  sections:selectDirectorySections
+})
 
-export default Directory;
\ No newline at end of file
+export default connect(mapStateToProps)(Directory);
+// export default Directory;
\ No newline at end of file
diff --git a/src/index.js b/src/index.js
index caf399a..7625507 100644
--- a/src/index.js
+++ b/src/index.js
@@ -4,12 +4,15 @@ import {BrowserRouter} from 'react-router-dom';
 import './index.css';
 import App from './App';
 import {Provider} from 'react-redux';
-import store from './redux/store';
+import { PersistGate } from 'redux-persist/integration/react';
+import {store,persistor} from './redux/store';
 
 ReactDOM.render(
   <Provider store = {store}>
   <BrowserRouter>
-    <App />
+    <PersistGate persistor={persistor}>
+       <App />
+    </PersistGate>
   </BrowserRouter>
   </Provider>,
   document.getElementById('root'));
\ No newline at end of file
diff --git a/src/pages/shop/shop.component.jsx b/src/pages/shop/shop.component.jsx
index fcae1eb..18eae56 100644
--- a/src/pages/shop/shop.component.jsx
+++ b/src/pages/shop/shop.component.jsx
@@ -1,26 +1,22 @@
 import React from "react";
-import SHOP_DATA from "./shop.data";
-import CollectionPreview from "../../components/collection-preview/collection-preview.component";
+import { Route } from "react-router-dom";
+import CollectionsOverview from "../../components/collections-overview/collections-overview.component";
+import CollectionPage from "../collection/collection.component";
+// import selectCollections from "../../redux/shop/shop.selectors";
+// import { connect } from "react-redux";
+// import { createStructuredSelector } from "reselect";
 
-class ShopPage extends React.Component
+const ShopPage = ({match}) =>
 {
-    constructor(props){
-        super(props);
-        this.state = {
-            collections : SHOP_DATA 
-        };
-    }
-
-    render(){
-        const {collections} = this.state;
-        return(<div className='shop-page'>
-        {
-            collections.map(({id,...otherCollectionProps}) => (
-                <CollectionPreview key={id} {...otherCollectionProps}/>
-            ))
-        }
-        </div>);
-    }
+    console.log(match)
+return(<div className='shop-page'>
+        <Route exact path={`${match.path}`} component={CollectionsOverview} />
+        <Route path={`${match.path}/:collectionId`} component={CollectionPage} />
+</div>);
 }
+// const mapStateToProps = createStructuredSelector({
+//     collections:selectCollections
+// })
 
+// export default connect(mapStateToProps)(ShopPage);
 export default ShopPage;
\ No newline at end of file
diff --git a/src/redux/root-reducer.js b/src/redux/root-reducer.js
index efa5280..0560982 100644
--- a/src/redux/root-reducer.js
+++ b/src/redux/root-reducer.js
@@ -1,9 +1,26 @@
 import { combineReducers } from "redux";
 import userReducer from "./user/user.reducer";
 import cartReducer from "./cart/cart.reducer";
+import { persistReducer } from "redux-persist";
+import directoryReducer from "./directory/directory.reducer";
+import shopReducer from "./shop/shop.reducer";
+import storage from "redux-persist/lib/storage";
 
-export default combineReducers({
+const persistConfig = {
+    key:'root',
+    storage,
+    whitelist:['cart']
+}
+
+const rootReducer = combineReducers({
     user:userReducer,
-    cart:cartReducer
+    cart:cartReducer,
+    directory:directoryReducer,
+    shop:shopReducer
 })
 
+export default persistReducer(persistConfig,rootReducer)
+// ({
+//     user:userReducer,
+//     cart:cartReducer
+// })
diff --git a/src/redux/store.js b/src/redux/store.js
index c120221..e57f765 100644
--- a/src/redux/store.js
+++ b/src/redux/store.js
@@ -1,9 +1,12 @@
 import { createStore,applyMiddleware } from "redux";
 import logger from 'redux-logger';
+import {persistStore} from 'redux-persist';
 import rootReducer from "./root-reducer";
 
 const middlewares = [logger];
 
-const store = createStore(rootReducer,applyMiddleware(...middlewares))
+export const store = createStore(rootReducer,applyMiddleware(...middlewares))
 
-export default store;
\ No newline at end of file
+export const persistor = persistStore(store);
+
+export default {store,persistor};
\ No newline at end of file
diff --git a/yarn.lock b/yarn.lock
index 3e77e73..946cea1 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -8366,6 +8366,11 @@ redux-logger@^3.0.6:
   dependencies:
     deep-diff "^0.3.5"
 
+redux-persist@^6.0.0:
+  version "6.0.0"
+  resolved "https://registry.yarnpkg.com/redux-persist/-/redux-persist-6.0.0.tgz#b4d2972f9859597c130d40d4b146fecdab51b3a8"
+  integrity sha512-71LLMbUq2r02ng2We9S215LtPu3fY0KgaGE0k8WRgl6RkqxtGfl7HUozz1Dftwsb0D/5mZ8dwAaPbtnzfvbEwQ==
+
 redux@^4.0.0, redux@^4.1.2:
   version "4.1.2"
   resolved "https://registry.yarnpkg.com/redux/-/redux-4.1.2.tgz#140f35426d99bb4729af760afcf79eaaac407104"
